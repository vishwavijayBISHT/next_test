{"ast":null,"code":"import initDb from \"../../helpers/initDB\";\nimport Order from \"../../models/Order\";\nimport bcrypt from \"bcryptjs\";\nimport jwt from \"jsonwebtoken\";\ninitDb();\n\nfunction Authinicated(icomponenet) {\n  return (req, res) => {\n    const {\n      authorization\n    } = req.headers;\n    console.log(authorization);\n\n    if (!authorization) {\n      return res.status(401).json({\n        error: \"you must be login\"\n      });\n    }\n\n    try {\n      const {\n        userid\n      } = jwt.verify(authorization, \"fxfgcgvhgvh\");\n      req.userid = userid;\n      return icomponenet(req, res);\n    } catch (err) {\n      return res.status(401).json({\n        error: \"you must be login\"\n      });\n    }\n  };\n}\n\nexport default Authinicated(async (req, res) => {\n  const orders = await Order.find({\n    user: req.userid\n  });\n  console.log(\"asdasdasdsd=>>>>>>\" + orders);\n  res.status(200).json(orders);\n});","map":{"version":3,"sources":["C:/Users/TCZ-NISHU/Desktop/myprojects/next-p/pages/api/orders.js"],"names":["initDb","Order","bcrypt","jwt","Authinicated","icomponenet","req","res","authorization","headers","console","log","status","json","error","userid","verify","err","orders","find","user"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AAEAH,MAAM;;AAEN,SAASI,YAAT,CAAsBC,WAAtB,EAAmC;AACjC,SAAO,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAoBF,GAAG,CAACG,OAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;;AAEA,QAAI,CAACA,aAAL,EAAoB;AAClB,aAAOD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAArB,CAAP;AACD;;AACD,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAaZ,GAAG,CAACa,MAAJ,CAAWR,aAAX,EAA0B,aAA1B,CAAnB;AACAF,MAAAA,GAAG,CAACS,MAAJ,GAAaA,MAAb;AAEA,aAAOV,WAAW,CAACC,GAAD,EAAMC,GAAN,CAAlB;AACD,KALD,CAKE,OAAOU,GAAP,EAAY;AACZ,aAAOV,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAArB,CAAP;AACD;AACF,GAfD;AAgBD;;AACD,eAAeV,YAAY,CAAC,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC9C,QAAMW,MAAM,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAW;AAAEC,IAAAA,IAAI,EAAEd,GAAG,CAACS;AAAZ,GAAX,CAArB;AAEAL,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBO,MAAnC;AACAX,EAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBK,MAArB;AACD,CAL0B,CAA3B","sourcesContent":["import initDb from \"../../helpers/initDB\";\r\nimport Order from \"../../models/Order\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\ninitDb();\r\n\r\nfunction Authinicated(icomponenet) {\r\n  return (req, res) => {\r\n    const { authorization } = req.headers;\r\n    console.log(authorization);\r\n\r\n    if (!authorization) {\r\n      return res.status(401).json({ error: \"you must be login\" });\r\n    }\r\n    try {\r\n      const { userid } = jwt.verify(authorization, \"fxfgcgvhgvh\");\r\n      req.userid = userid;\r\n\r\n      return icomponenet(req, res);\r\n    } catch (err) {\r\n      return res.status(401).json({ error: \"you must be login\" });\r\n    }\r\n  };\r\n}\r\nexport default Authinicated(async (req, res) => {\r\n  const orders = await Order.find({ user: req.userid });\r\n\r\n  console.log(\"asdasdasdsd=>>>>>>\" + orders);\r\n  res.status(200).json(orders);\r\n});\r\n"]},"metadata":{},"sourceType":"module"}