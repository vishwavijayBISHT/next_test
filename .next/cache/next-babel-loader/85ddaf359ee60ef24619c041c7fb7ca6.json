{"ast":null,"code":"import initDB from \"../../../helpers/initDb\";\nimport Product from \"../../../models/Product\";\nexport default (async (req, res) => {\n  switch (req.method) {\n    case \"GET\":\n      await GetProduct(req, res);\n      break;\n\n    case \"DELETE\":\n      await deleteProduct(req, res);\n      break;\n  }\n});\n\nconst GetProduct = async (req, res) => {\n  const {\n    pid\n  } = req.query;\n  const p = await Product.findOne({\n    _id: pid\n  });\n  res.status(200).json(p);\n};\n\nconst deleteProduct = async (req, res) => {\n  const {\n    pid\n  } = req.query;\n  await Product.findByIdAndDelete({\n    _id: pid\n  });\n  res.status(200).json({\n    message: \"ok\"\n  });\n};","map":{"version":3,"sources":["C:/Users/TCZ-NISHU/Desktop/myprojects/next-p/pages/api/productsdetail/[pid].js"],"names":["initDB","Product","req","res","method","GetProduct","deleteProduct","pid","query","p","findOne","_id","status","json","findByIdAndDelete","message"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,UAAQD,GAAG,CAACE,MAAZ;AACE,SAAK,KAAL;AACE,YAAMC,UAAU,CAACH,GAAD,EAAMC,GAAN,CAAhB;AACA;;AACF,SAAK,QAAL;AACE,YAAMG,aAAa,CAACJ,GAAD,EAAMC,GAAN,CAAnB;AACA;AANJ;AAQD,CATD;;AAUA,MAAME,UAAU,GAAG,OAAOH,GAAP,EAAYC,GAAZ,KAAoB;AACrC,QAAM;AAAEI,IAAAA;AAAF,MAAUL,GAAG,CAACM,KAApB;AAEA,QAAMC,CAAC,GAAG,MAAMR,OAAO,CAACS,OAAR,CAAgB;AAAEC,IAAAA,GAAG,EAAEJ;AAAP,GAAhB,CAAhB;AAEAJ,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,CAArB;AACD,CAND;;AAQA,MAAMH,aAAa,GAAG,OAAOJ,GAAP,EAAYC,GAAZ,KAAoB;AACxC,QAAM;AAAEI,IAAAA;AAAF,MAAUL,GAAG,CAACM,KAApB;AAEA,QAAMP,OAAO,CAACa,iBAAR,CAA0B;AAAEH,IAAAA,GAAG,EAAEJ;AAAP,GAA1B,CAAN;AAEAJ,EAAAA,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEE,IAAAA,OAAO,EAAE;AAAX,GAArB;AACD,CAND","sourcesContent":["import initDB from \"../../../helpers/initDb\";\r\nimport Product from \"../../../models/Product\";\r\n\r\nexport default async (req, res) => {\r\n  switch (req.method) {\r\n    case \"GET\":\r\n      await GetProduct(req, res);\r\n      break;\r\n    case \"DELETE\":\r\n      await deleteProduct(req, res);\r\n      break;\r\n  }\r\n};\r\nconst GetProduct = async (req, res) => {\r\n  const { pid } = req.query;\r\n\r\n  const p = await Product.findOne({ _id: pid });\r\n\r\n  res.status(200).json(p);\r\n};\r\n\r\nconst deleteProduct = async (req, res) => {\r\n  const { pid } = req.query;\r\n\r\n  await Product.findByIdAndDelete({ _id: pid });\r\n\r\n  res.status(200).json({ message: \"ok\" });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}