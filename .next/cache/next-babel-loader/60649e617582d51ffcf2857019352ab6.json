{"ast":null,"code":"import initDb from \"../../helpers/initDB\";\nimport Order from \"../../models/Order\";\ninitDb();\n\nfunction Authinicated(icomponenet) {\n  return (req, res) => {\n    const {\n      authorization\n    } = req.headers;\n\n    if (!authorization) {\n      return res.status(401).json({\n        error: \"you must be login\"\n      });\n    }\n\n    try {\n      const {\n        userid\n      } = jwt.verify(authorization, \"fxfgcgvhgvh\");\n      req.userid = userid;\n      return icomponenet(req, res);\n    } catch (err) {\n      return res.status(401).json({\n        error: \"you must be login\"\n      });\n    }\n  };\n}\n\nexport default Authinicated(async (req, res) => {\n  const orders = await Order.find({\n    user: req.userid\n  }).populate(\"products.prod\");\n  res.status(200).json(orders);\n});","map":{"version":3,"sources":["C:/Users/TCZ-NISHU/Desktop/myprojects/next-p/pages/api/orders.js"],"names":["initDb","Order","Authinicated","icomponenet","req","res","authorization","headers","status","json","error","userid","jwt","verify","err","orders","find","user","populate"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEAD,MAAM;;AAEN,SAASE,YAAT,CAAsBC,WAAtB,EAAmC;AACjC,SAAO,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnB,UAAM;AAAEC,MAAAA;AAAF,QAAoBF,GAAG,CAACG,OAA9B;;AAEA,QAAI,CAACD,aAAL,EAAoB;AAClB,aAAOD,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAArB,CAAP;AACD;;AACD,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAaC,GAAG,CAACC,MAAJ,CAAWP,aAAX,EAA0B,aAA1B,CAAnB;AACAF,MAAAA,GAAG,CAACO,MAAJ,GAAaA,MAAb;AAEA,aAAOR,WAAW,CAACC,GAAD,EAAMC,GAAN,CAAlB;AACD,KALD,CAKE,OAAOS,GAAP,EAAY;AACZ,aAAOT,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAArB,CAAP;AACD;AACF,GAdD;AAeD;;AACD,eAAeR,YAAY,CAAC,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC9C,QAAMU,MAAM,GAAG,MAAMd,KAAK,CAACe,IAAN,CAAW;AAAEC,IAAAA,IAAI,EAAEb,GAAG,CAACO;AAAZ,GAAX,EAAiCO,QAAjC,CACnB,eADmB,CAArB;AAGAb,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBM,MAArB;AACD,CAL0B,CAA3B","sourcesContent":["import initDb from \"../../helpers/initDB\";\r\nimport Order from \"../../models/Order\";\r\n\r\ninitDb();\r\n\r\nfunction Authinicated(icomponenet) {\r\n  return (req, res) => {\r\n    const { authorization } = req.headers;\r\n\r\n    if (!authorization) {\r\n      return res.status(401).json({ error: \"you must be login\" });\r\n    }\r\n    try {\r\n      const { userid } = jwt.verify(authorization, \"fxfgcgvhgvh\");\r\n      req.userid = userid;\r\n\r\n      return icomponenet(req, res);\r\n    } catch (err) {\r\n      return res.status(401).json({ error: \"you must be login\" });\r\n    }\r\n  };\r\n}\r\nexport default Authinicated(async (req, res) => {\r\n  const orders = await Order.find({ user: req.userid }).populate(\r\n    \"products.prod\"\r\n  );\r\n  res.status(200).json(orders);\r\n});\r\n"]},"metadata":{},"sourceType":"module"}